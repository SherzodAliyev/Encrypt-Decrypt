type: edu
custom_name: stage6
files:
- name: src/encryptdecrypt/Main.java
  visible: true
  text: "\npublic class Main {\n    public static void main(String[] args) {\n   \
    \     CommandMine message = new CommandMine();\n        // analyzes for arguments\
    \ and its values;\n        String text = \"\";\n        for (int i = 0; i < args.length;\
    \ i++) {\n            if (\"-mode\".equals(args[i])) {\n                message.setTypeOfOperation(args[i\
    \ + 1]);\n            } else if (\"-data\".equals(args[i])) {\n              \
    \  text = args[i +1];\n                message.setDataForProccess(text);\n   \
    \         } else if (\"-key\".equals(args[i])) {\n                message.setNumForShift(Integer.parseInt(args[i\
    \ + 1]));\n            }\n        }\n        \n        String res = messageConvertor(message.getTypeOfOperation(),\
    \ message.getDataForProccess(), message.getNumForShift());\n        System.out.println(res);\n\
    \    }\n\n    \n    \n    public static String messageConvertor(String typeOfOperation,\
    \ String inputStr, int key) {\n        String inputText = inputStr;//.substring(,\
    \ inputStr.length());\n        int tmp = 0;\n        String encText = \"\";\n\
    \        switch(typeOfOperation) {\n            case \"enc\": // encryptes the\
    \ text\n                for (int i = 0; i < inputText.length(); i++) {\n     \
    \               if (inputText.charAt(i) + key < 127) {\n                     \
    \  tmp = inputText.charAt(i) + key;\n                       encText += (char)tmp;\
    \ \n                    } else {\n                        tmp = inputText.charAt(i)\
    \  - 93;\n                        encText += (char)tmp;\n                    }\n\
    \                }\n                break;\n            case \"dec\": // decryptes\
    \ the text\n                for (int i = 0; i < inputText.length(); i++) {\n \
    \                   if (inputText.charAt(i) - key > 31) {\n                  \
    \      tmp = inputText.charAt(i) - key;\n                       encText += (char)tmp;\n\
    \n                    } else {\n                        tmp = inputText.charAt(i)\
    \ - key;\n                       encText += (char)tmp;\n                    }\n\
    \                }\n                break;        \n        }\n        return\
    \ encText;\n\n    }\n}\n\nclass CommandMine {\n    static String typeOfOperation;\n\
    \    static String dataForProccess;\n    static int numForShift;\n    \n    CommandMine()\
    \ {\n        this.typeOfOperation = \"\";\n        this.dataForProccess = \"\"\
    ;\n        this.numForShift = 0;\n    }\n    \n    public String getTypeOfOperation()\
    \ {\n        return this.typeOfOperation;\n    }\n    \n    public void setTypeOfOperation(String\
    \ typeOfOperation) {\n        this.typeOfOperation = typeOfOperation;\n    }\n\
    \    \n    public String getDataForProccess() {\n        return this.dataForProccess;\n\
    \    }\n    \n    public void setDataForProccess(String dataForProccess) {\n \
    \       this.dataForProccess = dataForProccess;\n    }\n    \n    public int getNumForShift()\
    \ {\n        return this.numForShift;\n    }\n    \n    public void setNumForShift(int\
    \ numForShift) {\n        this.numForShift = numForShift;\n    }\n}"
  learner_created: false
- name: test/EncryptDecryptTest.java
  visible: false
  text: |
    import org.hyperskill.hstest.common.FileUtils;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testcase.TestCase;

    import java.io.IOException;
    import java.nio.charset.StandardCharsets;
    import java.nio.file.Files;
    import java.nio.file.NoSuchFileException;
    import java.nio.file.Path;
    import java.nio.file.Paths;
    import java.util.List;

    public class EncryptDecryptTest extends StageTest<String> {

        @Override
        public List<TestCase<String>> generate() {
            return List.of(
                new TestCase<String>()
                    .addArguments(
                        "-alg", "unicode",
                        "-mode", "enc",
                        "-key", "5",
                        "-in", "in.txt",
                        "-out", "output.txt"
                    )
                    .setAttach("\\jqhtrj%yt%m~ujwxpnqq&")
                    .addFile("in.txt", "Welcome to hyperskill!"),

                new TestCase<String>()
                    .addArguments(
                        "-key", "0",
                        "-mode", "enc",
                        "-alg", "unicode",
                        "-in", "input.txt",
                        "-out", "output.txt"
                    )
                    .setAttach("Hello")
                    .addFile("input.txt", "Hello"),

                new TestCase<String>()
                    .addArguments(
                        "-key", "1",
                        "-in", "i.txt",
                        "-alg", "unicode",
                        "-out", "output.txt",
                        "-mode", "enc"
                    )
                    .setAttach("123456789")
                    .addFile("i.txt", "012345678"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-in", "input.txt",
                        "-out", "output.txt",
                        "-alg", "unicode",
                        "-key", "5"
                    )
                    .setAttach("Welcome to hyperskill!")
                    .addFile("input.txt", "\\jqhtrj%yt%m~ujwxpnqq&"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-alg", "unicode",
                        "-key", "0",
                        "-in", "input.txt",
                        "-out", "output.txt"
                    )
                    .setAttach("Hi")
                    .addFile("input.txt", "Hi"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "1",
                        "-in", "input.txt",
                        "-alg", "unicode",
                        "-out", "output.txt"
                    )
                    .setAttach("111122223333")
                    .addFile("input.txt", "222233334444"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "enc",
                        "-key", "5",
                        "-in", "input.txt",
                        "-alg", "shift",
                        "-out", "output.txt"
                    )
                    .setAttach("bjqhtrj yt mdujwxpnqq")
                    .addFile("input.txt", "welcome to hyperskill"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "10",
                        "-in", "input.txt",
                        "-alg", "shift",
                        "-out", "output.txt"
                    )
                    .setAttach("treasure")
                    .addFile("input.txt", "dbokcebo"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "enc",
                        "-key", "12",
                        "-in", "input.txt",
                        "-alg", "shift",
                        "-out", "output.txt"
                    )
                    .setAttach("cphpchdjcijdjibhdjebhjucspucmdmudbnuccup")
                    .addFile("input.txt", "qdvdqvrxqwxrxwpvrxspvxiqgdiqarairpbiqqid"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "10",
                        "-in", "input.txt",
                        "-alg", "shift",
                        "-out", "output.txt"
                    )
                    .setAttach("y")
                    .addFile("input.txt", "i"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "enc",
                        "-key", "10",
                        "-in", "input.txt",
                        "-alg", "shift",
                        "-out", "output.txt"
                    )
                    .setAttach("i")
                    .addFile("input.txt", "y")
            );
        }

        @Override
        public CheckResult check(String reply, String clue) {
            String fileName = "output.txt";
            String output;

            try {
                Path path = Paths.get(FileUtils.CURRENT_DIR + fileName);
                output = Files.readString(path, StandardCharsets.UTF_8);
            } catch (NoSuchFileException e) {
                return new CheckResult(false, "File output.txt not found!");
            } catch (IOException e) {
                return new CheckResult(false, "Cannot read from file!");
            }

            if (!output.trim().equals(clue.trim())) {
                return new CheckResult(false, "Wrong result in the file!");
            }

            return new CheckResult(true);
        }

    }
  learner_created: false
- name: output.txt
  visible: true
  text: 111122223333
  learner_created: true
feedback_link: https://hyperskill.org/learn/step/5392#comment
status: Solved
feedback:
  message: Well done! You've finished the project. Select a new project on <a href="https://hyperskill.org/projects">JetBrains
    Academy</a> to continue learning.
  time: Fri, 17 Jun 2022 10:42:03 UTC
record: 6
